<div class="sub_wrap">
    <div class="container clearfix">
        <div class="content" style="position:relative; padding:0 10px 0 10px;">
			<ul class="list_tab" style="margin-bottom:10px;width:75%;z-index:10000;" id="calculation_header">
			</ul>
        </div>

        <div class="list">
			<div class="search_wrap" id="overview">
				<table class="search_list" style="margin-bottom:20px;">
					<thead>
						<tr>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="2">입금</th>
							<th width="10%" rowspan="2">전환 머니</th>
							<th width="10%" rowspan="2">출금 </th>
							<th width="10%" rowspan="2">보유 머니</th>
							<th width="10%" rowspan="2">합계</th>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="11">죽장</th>
							<th width="10%" rowspan="2">윈로스(알값)</th>
							<th width="10%" rowspan="2">순이익</th>
							<th width="10%" rowspan="2">보관죽장</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a></td>
						</tr>
					</tbody>
					<thead>
						<tr>
							<th width="5%"></th>
							<th width="10%" style="text-align:center;">베팅</th>
							<th width="10%" style="text-align:center;">승리</th>
							<th width="10%" style="text-align:center;">윈로스</th>
							<th width="10%" style="text-align:center;">수수료</th>
							<th width="10%" style="text-align:center;">합</th>
							<th width="5%"></th>
							<th width="10%" style="text-align:center;">미전환 롤링</th>
							<th width="10%" style="text-align:center;">전환 롤링</th>
							<th width="10%" style="text-align:center;">미전환 죽장</th>
							<th width="10%" style="text-align:center;">전환 죽장</th>

						</tr>
					</thead>
					<tbody>
						<tr>
							<td></td>
							<td style="text-align:right;padding-right:5px;background-color:#f8f5d1;">

							</td>
							<td style="text-align:right;padding-right:5px;background-color:#f8f5d1;">

							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">

							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
							<td>
							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
							<td style="text-align:right;padding-right:5px;background-color:#FFFACD;">
							</td>
						</tr>
					</tbody>
				</table>
			</div>

			<% if ( user.iClass == 1 ) { %>
				<div style="overflow:auto; background-color:#727272;" id="ViceHQList">
					<% for ( let i = 0; i < listViceHQ.length; ++ i ) { %>
						<a href="javascript:SelectViceHQ('<%=listViceHQ[i].strNickname%>', '<%=listViceHQ[i].strGroupID%>');" class="btn_green" id="button_vicehq"><%=listViceHQ[i].strNickname%></a>
					<% } %>
				</div>
				<br>
			<% } %>
			<% if ( user.iClass <= 2 ) { %>
				<div style="overflow:auto; background-color:#727272;" id="AdminList">
					<% for ( let i = 0; i < listAdmin.length; ++ i ) { %>
						<a href="javascript:SelectAdmin('<%=listAdmin[i].strNickname%>', '<%=listAdmin[i].strGroupID%>');" class="btn_green" id="button_admin"><%=listAdmin[i].strNickname%></a>
					<%}%>
				</div>
				<br>
				<div style="overflow:auto; background-color:#727272;" id="PAdminList">
				</div>
			<%} else {%>
				<div style="overflow:auto; background-color:#727272;"  id="PAdminList">
					<% for ( let i = 0; i < listProAdmin.length; ++ i ) { %>
						<a href="javascript:SelectProAdmin('<%=listProAdmin[i].strNickname%>');" class="btn_blue" id="button_proadmin"><%=listProAdmin[i].strNickname%><%=(listProAdmin[i].strQuater != null) ? '(완)' : ''%></a>
					<%}%>
				</div>
			<%}%>
	
			<div style="background-color:#ffffff;text-align:right;padding-right:5px;padding-top:0px;padding-bottom:0px;" colspan="19">
				<select id="quater_month" style="width:100px;">
					<option value="0">1</option>
					<option value="1">2</option>
					<option value="2">3</option>
					<option value="3">4</option>
					<option value="4">5</option>
					<option value="5">6</option>
					<option value="6">7</option>
					<option value="7">8</option>
					<option value="8">9</option>
					<option value="9">10</option>
					<option value="10">11</option>
					<option value="11">12</option>
				</select>월
				<button id="button_quater1" class="menu1" data-menu="2" style="border:1px solid rgb(95, 93, 93);width:170px;height:25px;text-align:center;color:white" onclick="Request1stHalf();"><%=__('Half1')%></button>
				<button id="button_quater2" class="menu1" data-menu="3" style="border:1px solid rgb(95, 93, 93);width:170px;height:25px;text-align:center;color:white" onclick="Request2ndHalf();"><%=__('Half2')%></button>
				<div id="testSettle" style="background-color:#ffffff;text-align:right;padding-right:5px;padding-top:0px;padding-bottom:0px;" colspan="19">
				</div>
			</div>

			<div class="list_tit" id = "list_tit">
			</div>

			<div class="search_wrap" id="div_realtimebet">
	
				<table class="search_list">
					<caption><%=__('SearchResult')%></caption>
					<colgroup>
						<col style="width:2%">
						<col style="width:2%">
						<col style="width:2%">
						<col style="width:2%">
						<col style="width:3%">
						<col style="width:3%">

						<col style="width:3%">
						<col style="width:3%">
						<col style="width:3%">
						<col style="width:3%">

						<col style="width:6%;">
						<col style="width:6%;">
						<col style="width:6%;">
						<col style="width:6%;">
						<col style="width:6%;">

						<col style="width:6%;">
						<col style="width:6%;">
						<col style="width:6%;">
						<col style="width:6%;">

						<col style="width:5%;">
						<col style="width:5%;">
						<col style="width:5%;">
						<col style="width:5%;">
						<col style="width:5%;">
						<col style="width:5%;">
						<col style="width:17%;">

					</colgroup>
					<thead>
						<tr>
							<th scope="col">본사</th>
							<th scope="col"></th>
							<th scope="col"></th>
							<th scope="col"></th>
							<th scope="col"><%=__('ID')%></th>
							<th scope="col"><%=__('Nickname')%></th>

							<th scope="col" style="background-color:#78bfdb;color:white;"><%=__('Baccarat')%><br><%=__('Settle')%></th>
							<th scope="col" style="background-color:#78bfdb;color:white;"><%=__('Slot')%><br><%=__('Settle')%></th>
							<th scope="col" style="background-color:#78bfdb;color:white;">파워A<br>죽장</th>
							<th scope="col" style="background-color:#78bfdb;color:white;">파워B<br>죽장</th>
							
							<th scope="col">합계</th>
							<th scope="col">B<%=__('WinLose')%></th>
							<th scope="col">S<%=__('WinLose')%></th>
							<th scope="col">부본 죽장</th>

							<th scope="col">대본 B 알값</th>
							<th scope="col">대본 S 알값</th>

							<th scope="col">대본 죽장</th>

							<th scope="col"><%=__('Total')%></th>

							<th scope="col">죽장 분기</th>
							<th scope="col">죽장 지급</th>
							<th scope="col">죽장 이월</th>
							<th scope="col">죽장 적립</th>
							<th scope="col">죽장 총합</th>
							<th scope="col">전월죽장이월</th>
							<th scope="col">총 이월</th>
							<th scope="col">메모</th>
						</tr>
					</thead>
					<tbody id="list_agents">
					</tbody>
				</table>
			</div>
		</div>

        </div>
    </div>
</div>
<script type="text/javascript" src="js/constants.js"></script>
<script type="text/javascript" src="js/enum.js"></script>
<script type="text/javascript" src="js/time.js"></script>
<script type="text/javascript" src="js/manage_calculation_menu.js"></script>
<script type="text/javascript" src="js/manage_setting_ref.js"></script>
<script type="text/javascript" src="js/manage_user_menu.js"></script>
<script type="text/javascript" src="js/socket.js"></script>
<script>
	let user = JSON.parse('<%-JSON.stringify(user)%>');
    let iocount = JSON.parse('<%-JSON.stringify(iocount)%>');
	let list = JSON.parse('<%-JSON.stringify(list)%>');

	let listViceHQ = JSON.parse('<%-JSON.stringify(listViceHQ)%>');
	let listAdmin = JSON.parse('<%-JSON.stringify(listAdmin)%>');
	let listProAdmin= JSON.parse('<%-JSON.stringify(listProAdmin)%>');
	let listViceAdmin = JSON.parse('<%-JSON.stringify(listViceAdmin)%>');
	let listAgent = JSON.parse('<%-JSON.stringify(listAgent)%>');

	let strCurrentViceHQNickname = '';
	let strCurrentAdminNickname = '';
	let strCurrentAdminGroupId = '';
	let strCurrentProAdminNickname = '';
	let strQuater = '';
	let bEnableSettle = true;
	let dateQuaterStart = '';
	let dateQuaterEnd = '';

	let selectQuaterMonth = '';
	let selectQuater = 0;

	let date = new Date();

	let listAgents = [];

	$(document).on('click', '#button_vicehq', (e) => {

		if ( dateQuaterStart == '' || dateQuaterEnd == '' ) return;

		$('.btn_thinred').attr('class', 'btn_thingreen');

		$(e.currentTarget).attr('class', 'btn_thinred');
	});

	$(document).on('click', '#button_quater1', (e) => {
		let iMonth = parseInt($('#quater_month').val());
		if (!ValidationSettleHalf1(iMonth)) {
			$(e.currentTarget).attr('class', 'menu1');
			alert('현재 해당 분기는 조회할 수 없습니다(16일부터 가능합니다)');
			return;
		}
		$('.menu5').attr('class', 'menu1');
		$(e.currentTarget).attr('class', 'menu5');
	});

	$(document).on('click', '#button_quater2', (e) => {
		let iMonth = parseInt($('#quater_month').val());
		if (!ValidationSettleHalf2(iMonth)) {
			$(e.currentTarget).attr('class', 'menu1');
			alert('현재 해당 분기는 조회할 수 없습니다(1일부터 가능합니다)');
			return;
		}
		$('.menu5').attr('class', 'menu1');
		$(e.currentTarget).attr('class', 'menu5');
	});

	$('#quater_month').on('change', () => {
		$('#button_quater1').attr('class', 'menu1');
		$('#button_quater2').attr('class', 'menu1');
	});

	$(document).ready(() => {
		Alert(iocount, "<%=__('RequestInput')%>", "<%=__('RequestOutput')%>","<%=__('LetterSend')%>");

		SetCalculationHeader(1, user.iClass);

		$('#button_applysettle').hide();
		if ( user.iClass > 3 )
			$('#button_changesettle').hide();

		$("#lastquater_month").datepicker({
			format: 'yyyy-mm',
			language: 'kr',
			minViewMode: "months",
			startView: "months",
			autoclose : true
		});

		$('#quater_month').val(date.getMonth());
		selectQuaterMonth = date.getMonth();


		// 본사일 경우 본인의 정보를 바로 지정
		if ( user.iClass == 3 ) {
			strCurrentAdminNickname = user.strNickname;
			strCurrentAdminGroupId = user.strGroupID;
		}

		/**
		 * SetOverview init
		 */
		if (list != null && list.length > 0)
			SetOverview(list[0], '#overview', true, '', '');

		let TEST_CODE = true;
		SetTestTag(TEST_CODE);
	});

	let SetOverview = (aObject, strParentTag, bClear, strMemo, strMemo2, iRootClass) => {
		console.log(`SetOverview`);
		console.log(aObject);

		if ( bClear == true )
			$(strParentTag).empty();

		let iInput = parseInt(aObject.iInput);
		let iTransMoney = parseInt(aObject.iRollingTranslate)+parseInt(aObject.iSettleTranslate);
		let iOutput = parseInt(aObject.iOutput);
		let iTotalMoney = parseInt(aObject.iTotalMoney);
		let iTotalSum = parseInt(aObject.iTotal)  + parseInt(aObject.iTotalUnover) + parseInt(aObject.iTotalSlot) + parseInt(aObject.iTotalPB);
		// 대본사 이하는 본인의 죽장만 표시(본사는 본인 이하의 죽장 모두 합산)
		let iTotalSettle = parseInt(aObject.iTotalSettle);
		let iTotalCommission = parseInt(aObject.iTotalCommission);
		let iRealTotal = iTotalSum - parseInt(aObject.iTotalSettle) - parseInt(aObject.iTotalCommission);
		let iSettleAcc = parseInt(aObject.iSettleAcc);
		let iTotalSettleAcc = iSettleAcc;
		let iSettleCount = parseInt(aObject.iSettleCount);
		if (iSettleCount > 0) {
			iTotalSettleAcc = parseInt(aObject.iTotalSettleAcc); //  죽장 지급 시점 보관죽장
		}

		let iBetting = parseInt(aObject.iBetting);
		let iBettingUnover = parseInt(aObject.iBettingUnover);
		let iBettingSlot = parseInt(aObject.iBettingSlot);
		let iBettingPB = parseInt(aObject.iBettingPB);

		let iWin = parseInt(aObject.iWin);
		let iWinUnover = parseInt(aObject.iWinUnover);
		let iWinSlot = parseInt(aObject.iWinSlot);
		let iWinPB = parseInt(aObject.iWinPB);

		// let iWinLose = iBetting - iWin;
		// let iWinLoseUnover = iBettingUnover - iWinUnover;
		// let iWinLoseSlot = iBettingSlot - iWinSlot;
		// let iWinLosePB = iBettingPB - iWinPB;

		let iWinLose = parseInt(aObject.iWinLose);
		let iWinLoseUnover = parseInt(aObject.iWinLoseUnover);
		let iWinLoseSlot = parseInt(aObject.iWinLoseSlot);
		let iWinLosePB = parseInt(aObject.iWinLosePB);

		let iTotalRolling = parseInt(aObject.iTotalRolling);
		let iTotalRollingUnover = parseInt(aObject.iTotalRollingUnover);
		let iTotalRollingSlot = parseInt(aObject.iTotalRollingSlot);
		let iTotalRollingPB = parseInt(aObject.iTotalRollingPB);

		let iTotal = parseInt(aObject.iTotal);
		let iTotalUnover = parseInt(aObject.iTotalUnover);
		let iTotalSlot = parseInt(aObject.iTotalSlot);
		let iTotalPB = parseInt(aObject.iTotalPB);

		let iRolling = parseInt(aObject.iRolling);
		let iRollingTranslate = parseInt(aObject.iRollingTranslate);
		let iSettle = parseInt(aObject.iSettle);
		let iSettleTranslate = parseInt(aObject.iSettleTranslate);

		let tag = 
		`
		<table class="search_list" style="margin-bottom:20px;">
					<thead>
						<tr>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="2">입금</th>
							<th width="10%" rowspan="2">전환 머니</th>
							<th width="10%" rowspan="2">출금 </th>
							<th width="10%" rowspan="2">보유 머니</th>
							<th width="10%" rowspan="2">합계</th>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="11">죽장</th>
							<th width="10%" rowspan="2">윈로스(알값)</th>
							<th width="10%" rowspan="2">순이익</th>
							<th width="10%" rowspan="2">보관죽장</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a>${GetNumber(iInput)}</td>
							<td><a style="font-weight:100;"></a>${GetNumber(iTransMoney)}</td>
							<td><a style="font-weight:100;"></a>${GetNumber(iOutput)}</td>
							<td><a style="font-weight:100;"></a>${GetNumber(iTotalMoney)}</td>
							<td><a style="font-weight:100; color:${GetColor(iTotalSum)};">${GetNumber(iTotalSum)}</a></td>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100; color:${GetInversedColor(aObject.iTotalSettle)}">${GetSettleNumber(iTotalSettle)}</a></td>
							<td><a style="font-weight:100; color:red;">${GetNumber(iTotalCommission)}</a></td>
							<td><a style="font-weight:100; color:${GetColor(iTotal)};">${GetNumber(iRealTotal)}</a></td>
							<td><a style="font-weight:100; color:${GetInversedColor(iTotalSettleAcc)}">${GetNumber(iTotalSettleAcc)}</a></td>
						</tr>
					</tbody>
					<thead>
						<tr>
							<th width="5%"></th>
							<th width="10%" style="text-align:center;">베팅</th>
							<th width="10%" style="text-align:center;">승리</th>
							<th width="10%" style="text-align:center;">윈로스</th>
							<th width="10%" style="text-align:center;">수수료</th>
							<th width="10%" style="text-align:center;">합</th>
							<th width="5%"></th>
							<th width="10%" style="text-align:center;"></th>
							<th width="10%" style="text-align:center;">미전환롤링</th>
							<th width="10%" style="text-align:center;">죽장합</th>
							<th width="10%" style="text-align:center;"></th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;color:black; font-weight: bold;vertical-align:top;">
								B<br>
								S<br>
								P
							</td>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;color:black;vertical-align:top;">
								<font style="color:black">${GetNumber(iBetting+iBettingUnover)}</font>
								<br>
								<font style="color:black">${GetNumber(iBettingSlot)}</font>
								<br>
								<font style="color:black">${GetNumber(iBettingPB)}</font>
							</td>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;color:red;vertical-align:top;">
								<font style="color:red">${GetNumber(iWin+iWinUnover)}</font>
								<br>
								<font style="color:red">${GetNumber(iWinSlot)}</font>
								<br>
								<font style="color:red">${GetNumber(iWinPB)}</font>
							</td>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;vertical-align:top;">
								<font style="color:${GetColor(iWinLose+iWinLoseUnover)}">${GetNumber(iWinLose+iWinLoseUnover)}</font>
								<br>
								<font style="color:${GetColor(iWinLoseSlot)}">${GetNumber(iWinLoseSlot)}</font>
								<br>
								<font style="color:${GetColor(iWinLosePB)}">${GetNumber(iWinLosePB)}</font>
							</td>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;color:red;vertical-align:top;">
								<font style="color:red">${GetNumber(iTotalRolling + iTotalRollingUnover)}</font>
								<br>
								<font style="color:red">${GetNumber(iTotalRollingSlot)}</font>
								<br>
								<font style="color:red">${GetNumber(iTotalRollingPB)}</font>
							</td>
							<td style="text-align:center;padding-top: 5px; padding-bottom: 5px;background-color:#FFFACD;vertical-align:top;">
								<font style="color:${GetColor(iTotal+iTotalUnover)}">${GetNumber(iTotal+iTotalUnover)}</font>
								<br>
								<font style="color:${GetColor(iTotalSlot)}">${GetNumber(iTotalSlot)}</font>
								<br>
								<font style="color:${GetColor(iTotalPB)}">${GetNumber(iTotalPB)}</font>
							</td>
							<td>
							</td>
							<td style="text-align:center;background-color:#FFFACD;color:red;"></td>
							<td style="text-align:center;background-color:#FFFACD;color:red;">${GetNumber(iRolling)}</td>
							<td style="text-align:center;background-color:#FFFACD;color:red;">${GetNumber(iSettle)}</td>
							<td style="text-align:center;background-color:#FFFACD;"></td>
						</tr>
					</tbody>
				</table>
		`;

		$(strParentTag).append(tag);

		if ( user.iClass <= 3 ) {
			// 본사 지분자
			let iRealShare = iTotalSum - parseInt(aObject.iTotalSettle) - parseInt(aObject.iTotalCommission);
			let iShareTotal = parseInt(aObject.iTotalShare);
			let iCurrentTotalShare = parseInt(aObject.iCurrentTotalShare);
			let iShareAccBefore = 0;
			let iShareAccTotal = iShareTotal + iShareAccBefore;
			let iTotal = iRealShare - iShareTotal;

			// let iShareTotal = iRealShare+iShareAccBefore; // 순이익 - 가불전금액(지분 금액임)

			let shareTag = `
				<table class="search_list" style="margin-bottom:20px;">
					<thead>
						<tr>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="2">순이익</th>
							<th width="10%" rowspan="2">지분자 이월</th>
							<th width="10%" rowspan="2">지분자 전월 이월</th>
							<th width="10%" rowspan="2">지분자 총 이월</th>
							<th width="10%" rowspan="2">합계</th>
							<th width="5%" rowspan="2"></th>
							<th width="10%" rowspan="11">대본보관죽장</th>
							<th width="10%" rowspan="2">지분자보관죽장</th>
							<th width="10%" rowspan="2">메모</th>
							<th width="10%" rowspan="2">메모</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td><a style="font-weight:100;"></a></td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iRealShare)}</td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iShareTotal)}</td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iShareAccBefore)}</td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iShareAccTotal)}</td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iTotal)}</td>
							<td></td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iSettleAcc)}</td>
							<td><a style="font-weight:100;"></a>${GetNumberSign(iCurrentTotalShare)}</td>
							<% if (user.iClass > 1 && user.iClass <= 3 && user.iPermission != 100) { %>
								<td style=""  class="parent_row_31"><input style='width:70%;' type='text' id="share_memo1" value='${strMemo ?? ''}'><button style='color:white;' class='menu4' onclick='OnClickShareMemo();'>저장</button></td>
								<td style=""  class="parent_row_31"><input style='width:70%;' type='text' id="share_memo2" value='${strMemo2 ?? ''}'><button style='color:white;' class='menu4' onclick='OnClickShareMemo();'>저장</button></td>
							<% } else { %>
								<td style="" class="parent_row_31">${strMemo ?? ''}</td>
								<td style="" class="parent_row_31">${strMemo2 ?? ''}</td>
							<% } %>
						</tr>
					</tbody>
				</table>
			`;
			$(strParentTag).append(shareTag);
			if (user.iClass > 1 && user.iClass <= 3 && user.iPermission != 100) {
				checkBlockCharSpecial2(`#share_memo1`);
				checkBlockCharSpecial2(`#share_memo2`);
			}
		}
	}

	let FindProAdmin = (strNickname) => {

		for ( let i in listProAdmin )
		{
			if ( listProAdmin[i].strNickname == strNickname )
				return listProAdmin[i];
		}
		return null;
	}

	let FindAdmin = (strNickname) => {

		for ( let i in listAdmin )
		{
			if ( listAdmin[i].strNickname == strNickname )
				return listAdmin[i];
		}
		return null;
	}

	let Request1stHalf = () => {
		let iMonth = parseInt($('#quater_month').val());
		if (!ValidationSettleHalf1(iMonth)) {
			$('.menu5').attr('class', 'menu1');
			return;
		}
		dateQuaterStart = Get1QuaterStartDate(iMonth);
		dateQuaterEnd = Get1QuaterEndDate(iMonth);
		strQuater = `${parseInt(iMonth)+1}-1`;
		selectQuater = 1;

		RequestOverview(user.strGroupID, user.iClass, strQuater, dateQuaterStart, dateQuaterEnd, user.strID);

		if ( strCurrentAdminNickname != null && strCurrentAdminNickname.length > 0 && strCurrentAdminGroupId != null && strCurrentAdminGroupId.length > 0 ) {
			// 해당 대본사에 대한 정산 완료 여부 체크
			SelectAdmin(strCurrentAdminNickname, strCurrentAdminGroupId);
		} else if (user.iClass == 2) {
			RequestAdminList(user.strNickname, user.strGroupID);
		} else if (user.iClass == 1) {
			RequestViceHQList(user.strNickname, user.strGroupID);
		}

		if (parseInt(user.iClass) <= 3)
		{
			$(`#list_tit`).empty();
			$('#list_agents').empty();
		}
	}

	let Request2ndHalf = () => {
		const iMonth = parseInt($('#quater_month').val());
		if (!ValidationSettleHalf2(iMonth)) {
			$('#button_quater2').attr('class', 'menu1');
			return;
		}
		dateQuaterStart = Get2QuaterStartDate(iMonth);
		dateQuaterEnd = Get2QuaterEndDate(iMonth);
		strQuater = `${parseInt(iMonth)+1}-2`;
		selectQuater = 2;

		RequestOverview(user.strGroupID, user.iClass, strQuater, dateQuaterStart, dateQuaterEnd, user.strID);

		if ( strCurrentAdminNickname != null && strCurrentAdminNickname.length > 0 && strCurrentAdminGroupId != null && strCurrentAdminGroupId.length > 0 ) {
			// 해당 대본사에 대한 정산 완료 여부 체크
			SelectAdmin(strCurrentAdminNickname, strCurrentAdminGroupId);
		} else if (user.iClass == 2) {
			RequestAdminList(user.strNickname, user.strGroupID);
		} else if (user.iClass == 1) {
			RequestViceHQList(user.strNickname, user.strGroupID);
		}

		if (parseInt(user.iClass) <= 3)
		{
			$(`#list_tit`).empty();
			$('#list_agents').empty();
		}
	}

	let FindChildren = (list, strGroupID, iTargetClass) => {
		
		let children = [];

		for ( let i in list )
		{
			if ( list[i].iClass == iTargetClass )
			{
				let temp = list[i].strGroupID;
				let temp2 = temp.substring(0, strGroupID.length);
				if ( strGroupID == temp2)
				{
					console.log(`Same Group : ${list[i].strID}, ${list[i].fSettleBaccarat}`);

					children.push(list[i]);
				}
			}
		}
		return children;
	}

	// 클래스별 죽장 계산
	let PreCalculateSettle = (list, iTargetClass) => {

		for ( let i in list )
		{
			if ( list[i].iClass == iTargetClass )
				CalculateSettle(list[i], list);
		}
	}

	let GetZeroLimited = (value) => {

		if ( value < 0 )
			return 0;
		
		return value;
	}

	/**
	 * 알값은 대본 하위에 대해서는 윈로스 마이너스일 경우 알값은 0(대본사는 마이너스일 경우에도 금액 부담)
	 * @param list
	 * @param strGroupID
	 * @param iClass
	 * @param objectChildrenSettle
	 * @constructor
	 */
	let CalculateChildrenSettle = (list, strGroupID, iClass, objectChildrenSettle) => {

		let listResult = FindChildren(list, strGroupID, iClass);
		for ( let i in listResult )
		{
			const cB = parseInt(listResult[i].iSettleBaccarat);
			const cU = parseInt(listResult[i].iSettleUnderOver);
			const cS = parseInt(listResult[i].iSettleSlot);
			const cPA = parseInt(listResult[i].iSettlePBA);
			const cPB = parseInt(listResult[i].iSettlePBB);

			let cT = cB + cU + cS + cPA + cPB;

			if ( cT > 0 )
			{
				objectChildrenSettle.iBaccarat += cB;
				objectChildrenSettle.iUnderOver += cU;
				objectChildrenSettle.iSlot += cS;
				objectChildrenSettle.iPBA += cPA;
				objectChildrenSettle.iPBB += cPB;
			} else if (iClass <= 4) {  // 대본사는 -일 경우에도 알값 계산
				objectChildrenSettle.iBaccarat += cB;
				objectChildrenSettle.iUnderOver += cU;
				objectChildrenSettle.iSlot += cS;
				objectChildrenSettle.iPBA += cPA;
				objectChildrenSettle.iPBB += cPB;
			}
		}
	}

	/**
	 * 죽장 정산값 계산(하위 파트너를 조회해서 누적)
	 * 윈로스에 수수료 제외 후 계산
	 * @param obj
	 * @param list
	 * @constructor
	 */
	let CalculateSettle = (obj, list) => {

		let iSettleBaccarat = obj.iBaccaratTotal * obj.fSettleBaccarat * 0.01;
		let iSettleUnderOver = obj.iUnderOverTotal * obj.fSettleBaccarat * 0.01;
		let iSettleSlot = obj.iSlotTotal * obj.fSettleSlot * 0.01;
		let iSettlePBA = obj.iPBATotal * obj.fSettlePBA * 0.01;
		let iSettlePBB = obj.iPBBTotal * obj.fSettlePBB * 0.01;

		obj.iSettleBaccarat = iSettleBaccarat;
		obj.iSettleUnderOver = iSettleUnderOver;
		obj.iSettleSlot = iSettleSlot;
		obj.iSettlePBA = iSettlePBA;
		obj.iSettlePBB = iSettlePBB;
		obj.iCommissionBaccarat = 0;
		obj.iCommissionSlot = 0;
		obj.iResult = 0;

		if ( obj.iClass == 7 )
		{
			obj.iQuaterSettle = parseInt(iSettleBaccarat + iSettleUnderOver + iSettleSlot + iSettlePBA + iSettlePBB);
			if ( obj.iQuaterSettle < 0 )
				obj.iQuaterSettle = 0;

			obj.objectSettle = {iShop:obj.iQuaterSettle, iAgent:0, iViceAdmin:0, iProAdmin:0};
		}
		else if ( obj.iClass == 6 )
		{
			let children = FindChildren(list, obj.strGroupID, parseInt(obj.iClass)+1);
			let objectSettle = {iShop:0};

			for ( let i in children )
			{
				if ( children[i].objectSettle.iShop > 0 )
					objectSettle.iShop += children[i].objectSettle.iShop;
			}

			let objectChildrenSettle = {iBaccarat:0, iUnderOver:0, iSlot:0, iPBA:0, iPBB:0};

			if ( objectSettle.iShop > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 7, objectChildrenSettle);
			}

			obj.iSettleBaccarat = (obj.iBaccaratTotal-objectChildrenSettle.iBaccarat) * obj.fSettleBaccarat * 0.01;
			obj.iSettleUnderOver = (obj.iUnderOverTotal-objectChildrenSettle.iUnderOver) * obj.fSettleBaccarat * 0.01;
			obj.iSettleSlot = (obj.iSlotTotal-objectChildrenSettle.iSlot) * obj.fSettleSlot * 0.01;
			obj.iSettlePBA = (obj.iPBATotal-objectChildrenSettle.iPBA) * obj.fSettlePBA * 0.01;
			obj.iSettlePBB = (obj.iPBBTotal-objectChildrenSettle.iPBB) * obj.fSettlePBB * 0.01;

			obj.iQuaterSettle = parseInt(obj.iSettleBaccarat + obj.iSettleUnderOver + obj.iSettleSlot + obj.iSettlePBA + obj.iSettlePBB);
			if ( obj.iQuaterSettle < 0 )
				obj.iQuaterSettle = 0;

			obj.objectSettle = {iShop:objectSettle.iShop, iAgent:obj.iQuaterSettle, iViceAdmin:0, iProAdmin:0};
		}
		else if ( obj.iClass == 5 ) // 부본
		{
			let children = FindChildren(list, obj.strGroupID, parseInt(obj.iClass)+1);
			let objectSettle = {iShop:0, iAgent:0};
			for ( let i in children )
			{
				if ( children[i].objectSettle.iShop > 0 )
					objectSettle.iShop += children[i].objectSettle.iShop;
				if ( children[i].objectSettle.iAgent > 0 )
					objectSettle.iAgent += children[i].objectSettle.iAgent;
			}
			let objectChildrenSettle = {iBaccarat:0, iUnderOver:0, iSlot:0, iPBA:0, iPBB:0};

			if ( objectSettle.iShop > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 7, objectChildrenSettle);
			}

			if ( objectSettle.iAgent > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 6, objectChildrenSettle);
			}

			//
			let bFlag = true;
			if ( bFlag == true )

			{
				// 알값은 대본사만
				// const cBU = (parseInt(obj.iBaccaratWinLose) + parseInt(obj.iUnderOverWinLose)) * 0.1;
				// const cS = parseInt(obj.iSlotWinLose) * 0.1;
				//
				// obj.iCommissionBaccarat += Math.abs(cBU);
				// obj.iCommissionSlot += Math.abs(cS);

				const cBUTotal = parseInt(obj.iBaccaratTotal) + parseInt(obj.iUnderOverTotal);
				const cBUChildrenSettleTotal = objectChildrenSettle.iBaccarat+objectChildrenSettle.iUnderOver;
				const cBUFinal = cBUTotal - cBUChildrenSettleTotal - obj.iCommissionBaccarat;

				obj.iSettleBaccarat = cBUFinal * obj.fSettleBaccarat * 0.01;
				obj.iSettleUnderOver = 0;

				obj.iSettleSlot = (obj.iSlotTotal-objectChildrenSettle.iSlot-obj.iCommissionSlot) * obj.fSettleSlot * 0.01;
			}
			else
			{
				obj.iSettleBaccarat = (obj.iBaccaratTotal-objectChildrenSettle.iBaccarat) * obj.fSettleBaccarat * 0.01;
				obj.iSettleUnderOver = (obj.iUnderOverTotal-objectChildrenSettle.iUnderOver) * obj.fSettleBaccarat * 0.01;
				obj.iSettleSlot = (obj.iSlotTotal-objectChildrenSettle.iSlot) * obj.fSettleSlot * 0.01;

			}
			obj.iSettlePBA = (obj.iPBATotal-objectChildrenSettle.iPBA) * obj.fSettlePBA * 0.01;
			obj.iSettlePBB = (obj.iPBBTotal-objectChildrenSettle.iPBB) * obj.fSettlePBB * 0.01;

			// 죽장비 1000원 절삭(해당 금액은 순이익으로 처리)
			// obj.iSettleBaccarat = parseInt(Math.floor(obj.iSettleBaccarat/1000) * 1000);
			// obj.iSettleSlot = parseInt(Math.floor(obj.iSettleSlot/1000) * 1000);
			// obj.iSettlePBA = parseInt(Math.floor(obj.iSettlePBA/1000) * 1000);
			// obj.iSettlePBB = parseInt(Math.floor(obj.iSettlePBB/1000) * 1000);

			obj.iQuaterSettle = parseInt(obj.iSettleBaccarat + obj.iSettleUnderOver + obj.iSettleSlot + obj.iSettlePBA + obj.iSettlePBB);
			if ( obj.iQuaterSettle < 0 )
				obj.iQuaterSettle = 0;

			obj.objectSettle = {iShop:objectSettle.iShop, iAgent:objectSettle.iAgent, iViceAdmin:obj.iQuaterSettle, iProAdmin:0};
		}
		else if ( obj.iClass == 4 ) // 대본
		{
			let children = FindChildren(list, obj.strGroupID, parseInt(obj.iClass)+1);
			let objectSettle = {iShop:0, iAgent:0, iViceAdmin:0};
			for ( let i in children )
			{

				if ( children[i].objectSettle.iShop > 0 )
					objectSettle.iShop += children[i].objectSettle.iShop;
				if ( children[i].objectSettle.iAgent > 0 )
					objectSettle.iAgent += children[i].objectSettle.iAgent;
				if ( children[i].objectSettle.iViceAdmin > 0 )
					objectSettle.iViceAdmin += children[i].objectSettle.iViceAdmin;
			}

			let objectChildrenSettle = {iBaccarat:0, iUnderOver:0, iSlot:0, iPBA:0, iPBB:0};

			if ( objectSettle.iShop > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 7, objectChildrenSettle);

				console.log(`objectChildrenSettle Shop`);
				console.log(objectChildrenSettle);

			}

			if ( objectSettle.iAgent > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 6, objectChildrenSettle);

				console.log(`objectChildrenSettle Agent`);
				console.log(objectChildrenSettle);

			}

			if ( objectSettle.iViceAdmin > 0 )
			{
				CalculateChildrenSettle(list, obj.strGroupID, 5, objectChildrenSettle);

				console.log(`objectChildrenSettle VAdmin`);
				console.log(objectChildrenSettle);
			}

			console.log(`objectChildrenSettle PAdmin`);
			// 알값 계산(윈로스가 플러스일 경우에만 계산, 윈로스 -일 경우에는 0로 표시)
			let cBU = (parseInt(obj.iBaccaratWinLose) + parseInt(obj.iUnderOverWinLose));
			if (cBU > 0) {
				cBU = cBU * 0.1;
			} else {
				cBU = 0;
				obj.iBaccaratWinLose = 0;
				obj.iUnderOverWinLose = 0;
			}

			let cS = parseInt(obj.iSlotWinLose);
			if (cS > 0) {
				cS = cS * 0.1;
			} else {
				cS = 0;
				obj.iSlotWinLose = 0;
			}

			obj.iCommissionBaccarat += Math.abs(cBU);
			obj.iCommissionSlot += Math.abs(cS);

			const cBUTotal = parseInt(obj.iBaccaratTotal) + parseInt(obj.iUnderOverTotal);
			const cBUChildrenSettleTotal = objectChildrenSettle.iBaccarat+objectChildrenSettle.iUnderOver;
			const cBUFinal = cBUTotal - cBUChildrenSettleTotal - obj.iCommissionBaccarat;
			obj.iSettleBaccarat = cBUFinal * obj.fSettleBaccarat * 0.01;
			obj.iSettleUnderOver = 0;
			obj.iSettleSlot = (obj.iSlotTotal-objectChildrenSettle.iSlot-obj.iCommissionSlot) * obj.fSettleSlot * 0.01;
			obj.iSettlePBA = (obj.iPBATotal-objectChildrenSettle.iPBA) * obj.fSettlePBA * 0.01;
			obj.iSettlePBB = (obj.iPBBTotal-objectChildrenSettle.iPBB) * obj.fSettlePBB * 0.01;

			// 죽장비 1000원 절삭(해당 금액은 순이익으로 처리)
			// obj.iSettleBaccarat = parseInt(Math.floor(obj.iSettleBaccarat/1000) * 1000);
			// obj.iSettleSlot = parseInt(Math.floor(obj.iSettleSlot/1000) * 1000);
			// obj.iSettlePBA = parseInt(Math.floor(obj.iSettlePBA/1000) * 1000);
			// obj.iSettlePBB = parseInt(Math.floor(obj.iSettlePBB/1000) * 1000);원

			obj.iQuaterSettle = parseInt(obj.iSettleBaccarat + obj.iSettleUnderOver + obj.iSettleSlot + obj.iSettlePBA + obj.iSettlePBB);
			obj.objectSettle = {iShop:objectSettle.iShop, iAgent:objectSettle.iAgent, iViceAdmin:objectSettle.iViceAdmin, iProAdmin:obj.iQuaterSettle};
		}


		//obj.iResult = parseInt(obj.iBaccaratTotal) + parseInt(obj.iUnderOverTotal) + parseInt(obj.iSlotTotal) + parseInt(obj.iPBATotal) + parseInt(obj.iPBBTotal) - obj.iQuaterSettle;
		let c1 = parseInt(obj.iBaccaratTotal) + parseInt(obj.iUnderOverTotal) + parseInt(obj.iSlotTotal) + parseInt(obj.iPBATotal) + parseInt(obj.iPBBTotal);
		let c2 = parseInt(obj.objectSettle.iProAdmin) + parseInt(obj.objectSettle.iViceAdmin) + parseInt(obj.objectSettle.iAgent) + parseInt(obj.objectSettle.iShop);
		let c3 = obj.iCommissionBaccarat + obj.iCommissionSlot;

		obj.iResult = c1 - c2 - c3;
		console.log(obj);
	}

	/**
	 * 대본 합계 : B윈로스 + U윈로스 + S윈로스 + P윈로스 - 알값(롤링비 or 수수료) - 부본죽장
	 * 부본 합계 : B윈로스 + U윈로스 + S윈로스 + P윈로스 - 알값(롤링비 or 수수료)
	 * 알값 : ((B윈로스 + U윈로스) * 0.1) + (S윈로스 * 0.1) + (P윈로스 * 0.1)
	 * 죽장 : 합계 * 0.1(부분죽장은 매출이 마이너스는 미발생, 대본죽장은 마이너스라도 발생)
	 * 대본죽장 : 합계 - 부본죽장 - 대본알값 * 죽장비율
	 * @param iRootClass
	 * @param aObject
	 * @param bEnableSettle
	 * @returns {string}
	 * @constructor
	 */
	let AddPartner = (iRootClass, aObject, bEnableSettle) => {
		let color = '#ffffff';
		let headtag = '';
		let isShowTotal = true;
		let isShowSettleRate = true;
		let isShowWinlose = true;
		let isShowSettle = true;
		let isShowSettleAcc = true;

		switch(aObject.iClass)
		{
			case EAgent.eProAdmin:
				headtag = `<td>┗</td><td>─</td><td>─</td><td>─</td>`;
				isShowWinlose = true;
				break;
			case EAgent.eViceAdmin:
				headtag = `<td></td><td>┗</td><td>─</td><td>─</td>`;
				if ( iRootClass != EAgent.eViceAdmin )
					color = '#c9c9c4';
				isShowWinlose = false;
				break;
			case EAgent.eAgent:
				headtag = `<td></td><td></td><td>┗</td><td>─</td>`;
				if ( iRootClass != EAgent.eAgent )
					color = '#ece7ab';
				isShowTotal = false;
				isShowSettleRate = false;
				isShowWinlose = false;
				isShowSettle = false;
				isShowSettleAcc = false;
				break;
			case EAgent.eShop:
				headtag = `<td></td><td></td><td></td><td>┗</td>`;
				if ( iRootClass != EAgent.eShop )
					color = '#f3e9d9';
				isShowTotal = false;
				isShowSettleRate = false;
				isShowWinlose = false;
				isShowSettle = false;
				isShowSettleAcc = false;
				break;
			case EAgent.eUser:
				if ( iRootClass != EAgent.eUser )
					color = 'rgb(190, 255, 212)';
				isShowTotal = false;
				isShowSettleRate = false;
				isShowWinlose = false;
				isShowSettle = false;
				isShowSettleAcc = false;
				break;
		}

		var tagoption = 'disabled="disabled"';
		if ( bEnableSettle == true )
			tagoption = '';

		var subtag = `

			<tr id=${aObject.strNickname} class='Agent' onmouseover="this.style.backgroundColor='#9FB6FF'" onmouseout="this.style.background='blue'">

				${headtag}

				<input type='hidden' id='iClass${aObject.strNickname}' value='${aObject.iClass}' >`

		subtag += `

				<td style="background-color:${color};"  class="parent_row_31">

				<a href="javascript:RequestPartnerInfo('${aObject.strNickname}', '${aObject.strGroupID}', '${aObject.iClass}');"  style="color:blue;">${aObject.strID}</a>

				</td>

				<td style="background-color:${color};"  class="parent_row_31">
					<a id="request_partneragents" href="javascript:RequestPartnerAgent('${aObject.strNickname}', '${aObject.strGroupID}', '${aObject.iClass}', ${bEnableSettle});"  style="color:blue;">${aObject.strNickname}</a>
				</td>
		`;


		if ( user.iClass > 1 && user.iClass <= 3 && user.iPermission != 100 ) {
			if ( isShowSettleRate )
			{
				subtag += `
					<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" style="width:50%;" name="bakara_over_31" id="fSettleBaccarat${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettleBaccarat} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" style="width:50%;" name="bakara_over_31" id="fSettleSlot${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettleSlot} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" style="width:50%;" name="bakara_over_31" id="fSettlePBA${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettlePBA} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" style="width:50%;" name="bakara_over_31" id="fSettlePBB${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettlePBB} ${tagoption}>
				%
				</td>`;
			}
			else
			{
				subtag += `
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
				`;
			}
		} else {
			if ( isShowSettleRate )
			{
				subtag += `
					<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" disabled style="width:50%;" name="bakara_over_31" id="fSettleBaccarat${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettleBaccarat} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" disabled style="width:50%;" name="bakara_over_31" id="fSettleSlot${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettleSlot} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" disabled style="width:50%;" name="bakara_over_31" id="fSettlePBA${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettlePBA} ${tagoption}>
				%
				</td>

				<td style="background-color:${color};"  class="parent_row_31">
				<input type="text" disabled style="width:50%;" name="bakara_over_31" id="fSettlePBB${aObject.strNickname}" required="no" message="죽장" value=${aObject.fSettlePBB} ${tagoption}>
				%
				</td>`;
			}
			else
			{
				subtag += `
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
					<td style="background-color:${color};"  class="parent_row_31"></td>
				`;
			}
		}

		let iTotal = 0;
		let iRolling = 0;
		let iBaccaratWinLose = 0;
		let iUnderOverWinLose = 0;
		let iSlotWinLose = 0;
		let iPBWinLose = 0;
		let iResult = 0; // 순이익
		if (bEnableSettle) {
			iTotal = parseInt(aObject.iBaccaratTotal) + parseInt(aObject.iUnderOverTotal) + parseInt(aObject.iSlotTotal) + parseInt(aObject.iPBATotal) + parseInt(aObject.iPBBTotal);
			iRolling = parseInt(aObject.iRollingMoney);
			iBaccaratWinLose = parseInt(aObject.iBaccaratWinLose);
			iUnderOverWinLose = parseInt(aObject.iUnderOverWinLose);
			iSlotWinLose = parseInt(aObject.iSlotWinLose);
			iPBWinLose = parseInt(aObject.iPBWinLose);
			iResult = parseInt(aObject.iResult);
		} else {
			iTotal = parseInt(aObject.iBaccaratTotal) + parseInt(aObject.iUnderOverTotal) + parseInt(aObject.iSlotTotal) + parseInt(aObject.iPBATotal) + parseInt(aObject.iPBBTotal);
			iRolling = parseInt(aObject.iRollingMoney);
			iBaccaratWinLose = parseInt(aObject.iBaccaratWinLose);
			iUnderOverWinLose = parseInt(aObject.iUnderOverWinLose);
			iSlotWinLose = parseInt(aObject.iSlotWinLose);
			iPBWinLose = parseInt(aObject.iPBWinLose);
			iResult = parseInt(aObject.iResult);
		}

		console.log(`${iSlotWinLose}`);

		let iValue = 0;

		if ( isShowTotal )
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><a><font color="${GetColor(iTotal)}" id='total_${aObject.strNickname}'>${GetNumber(iTotal)}</font></a></td>`;
		}
		else
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
		}

		if ( isShowWinlose )
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetColor(iBaccaratWinLose+iUnderOverWinLose)}" id='bwinlose_${aObject.strNickname}'>${GetNumber(parseInt(iBaccaratWinLose+iUnderOverWinLose))}</font></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetColor(iSlotWinLose)}" id='swinlose_${aObject.strNickname}'>${GetNumber(parseInt(iSlotWinLose))}</font></td>`;
		}
		else // 대본사 하위는 윈로스 값 붎필요 비표시
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
		}

		// 죽장
		iValue = parseInt(aObject.objectSettle.iViceAdmin);
		if ( isShowSettle )
		{
			// 부본 죽장
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetInversedColor(iValue)}" id='settleevice_${aObject.strNickname}'>${GetNumber(parseInt(iValue))}</font></td>`;
			// 대본 B알값
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetInversedColor(aObject.iCommissionBaccarat)}" id='commissionb_${aObject.strNickname}'>${GetNumber(aObject.iCommissionBaccarat)}</font></td>`;
			// 대본 S알값
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetInversedColor(aObject.iCommissionSlot)}" id='commissions_${aObject.strNickname}'>${GetNumber(aObject.iCommissionSlot)}</font></td>`;

			iValue = parseInt(aObject.objectSettle.iProAdmin);
			// 대본 죽장
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetInversedColor(iValue)}" id='settlepro_${aObject.strNickname}'>${GetSettleNumber(iValue)}</font></td>`;
			// 합계
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="${GetColor(aObject.iResult)}" id='result_${aObject.strNickname}'>${GetNumber(aObject.iResult)}</font></td>`;
			// 죽장 분기
			subtag += `<td style="background-color:${color};" class="parent_row_31"><font color="black" id="quatersettle_${aObject.strNickname}">${GetNumberSign(aObject.iQuaterSettle)}</font></td>`;
			// 죽장 지급
			subtag += `<td style="background-color:${color};" class="parent_row_31"><font color="black">${GetNumberSign(aObject.iSettleGive)}</font></td>`;
			// 죽장 이월
			subtag += `<td style="background-color:${color};" class="parent_row_31"><font color="black">${GetNumberSign(aObject.iSettleAcc)}</font></td>`;
		}
		else
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};" class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};" class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};" class="parent_row_31"></td>`;

		}


		// 죽장 적립(입력값 죽장 이월)
		subtag += `<input type='hidden' id='quatersettle_${aObject.strNickname}' value='${aObject.iSettleOrigin}'/>`;
		subtag += `<input type='hidden' id='class_${aObject.strNickname}' value='${aObject.iClass}'/>`;
		subtag += `<input type='hidden' id='rolling_${aObject.strNickname}' value='${aObject.iRollingMoney}'/>`;

		// 대본 죽장비
		let iQuaterSettle = parseInt(aObject.iQuaterSettle);
		if (bEnableSettle == false)
			iQuaterSettle = 0;
		let inputSettleOption = '';
		if (iQuaterSettle < 0 || bEnableSettle == false || parseInt(aObject.iClass) == 5) // 부본은 수정 불가
			inputSettleOption = 'disabled="disabled"';

		// 죽장 적립(입력창)
		if ( isShowSettleAcc )
		{
			subtag += `
				<td style="background-color:${color};" class="parent_row_31">
					<input style='width:80%;height:12px;text-align:center;color:black;'type='text' value='${iQuaterSettle}' id='input_${aObject.strNickname}' ${inputSettleOption}/>
					<br>
					<a id='inputsettle_${aObject.strNickname}'>${iQuaterSettle}</a>
				</td>`;
		}
		else
		{
			subtag += `<td style="background-color:${color};" class="parent_row_31"></td>`;
		}

		// 죽장 총합(대본 죽장 + 부본 죽장)
		let iSettleTotal = (bEnableSettle == true) ? 0 : parseInt(aObject.objectSettle.iViceAdmin) + parseInt(aObject.objectSettle.iProAdmin);
		// 전월죽장 이월(죽장 후에는 저장된 값으로 그전에는 이용자가 가지고 있는 이월 죽장값으로 표시)
		let iSettleBeforeAcc = (bEnableSettle == true) ? aObject.iSettleAccUser : aObject.iSettleBeforeAcc;
		// 총이월(이용자가 가지고 있는 이월 죽장값으로 표시)
		let iSettleAccTotal = (bEnableSettle == false) ? aObject.iSettleAccUser : 0;
		if ( isShowSettle )
		{
			// 죽장 총합
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="black">${GetNumberSign(iSettleTotal)}</font></td>`;
			// 전월죽장 이월
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="black">${GetNumberSign(iSettleBeforeAcc)}</font></td>`;
			// 총 이월
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><font color="black"><a href="javascript:RequestPartnerCredits('${aObject.strNickname}', '${aObject.strGroupID}', '${aObject.iClass}');">${GetNumberSign(iSettleAccTotal)}</a></font></td>`;
		}
		else
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
			subtag += `<td style="background-color:${color};"  class="parent_row_31"></td>`;
		}

		if ( user.iClass > 1 && user.iClass <= 3 && user.iPermission != 100 )
		{
			subtag += `<td style="background-color:${color};"  class="parent_row_31"><input style='width:70%;' type='text' id="memoinput_${aObject.strNickname}" value='${aObject.strSettleMemo}'><button style='color:white;' class='menu4' onclick='OnClickMemo("${aObject.strNickname}");'>저장</button></td>`;
		}
		else
		{
			subtag += `<td style="background-color:${color};">${aObject.strSettleMemo}</td>`;
		}

		subtag += `</tr>`;

		return subtag;
	}

	let RequestOverview = (strGroupID, iClass, strQuater, dateStart, dateEnd, strID) => {

		$.ajax({
			url:'/manage_calculation/request_overview',
			type:"POST",
			data: {
				strGroupID:strGroupID,
				iClass:iClass,
				strQuater:strQuater,
				dateStart:dateStart,
				dateEnd:dateEnd,
				strID: strID,
			},
			dataType: "json",
			success: function (obj) {

				console.log(`RequestOverview`);
				console.log(obj);

				if ( obj.result == 'OK')
				{
					SetOverview(obj.list[0], '#overview', true, obj.strMemo, obj.strMemo2, obj.iRootClass);
				}
				else
				{
				}
			}
		});
	}

	let RequestList = (strGroupID, iClass, dateStart, dateEnd) => {
		let iTClass = 4;
		if ( user.iClass == 5 )
			iTClass = 5;

		$.ajax({
			url:'/manage_calculation/request_settle',
			type:"POST",
			data: {
				dateStart:dateStart,
				dateEnd:dateEnd,
				strNickname:strCurrentProAdminNickname,
				strGroupID:strGroupID,
				iClass:iTClass,
				strQuater:strQuater,
			},
			dataType: "json",
			success: function (obj) {

				SetViceHQList();
				SetAdminList();
				SetProAdminList();

				$(`#list_tit`).empty();

				if ( obj.result == 'OK')
				{
					if ( user.iClass > 1 && user.iClass <= 3 && user.iPermission != 100 ) {
						$(`#list_tit`).append(`
							<h3>죽장 정산
								<button id='button_changesettle' style="margin-left:8%;width:200px;height:40px;text-align:center;background-color: rgb(82, 161, 206);color:white" onclick="javascript:DoApplySettle();"><strong>죽장 적용</strong></button>
								<button id='button_applysettle' style="margin-left:300px;width:200px;height:40px;text-align:center;background-color: rgb(218, 107, 107);color:white" onclick="javascript:RequestApplySettle();"><strong>죽장 지급</strong></button>
							</h3>
						`);
					} else {
						$(`#list_tit`).append(`
							<h3>죽장 정산</h3>
						`);
					}

					bEnableSettle	= true;
					$('#list_agents').empty();

					PreCalculateSettle(obj.list, 7);
					PreCalculateSettle(obj.list, 6);
					PreCalculateSettle(obj.list, 5);
					PreCalculateSettle(obj.list, 4);

					listAgents = [];

					for ( let i in obj.list )
					{
						listAgents.push({strNickname: obj.list[i].strNickname, strID: obj.list[i].strID});
						let bFlag = true;
						console.log(`User iClass : ${user.iClass}`);
						if ( user.iClass == 4 )
							bFlag = false;

						let tag = AddPartner(3, obj.list[i], bFlag);
						$('#list_agents').append(tag);
					}
				}
				else
				{
					// 이미 죽장이 완료됨
					$(`#list_tit`).append(`
						<h3>죽장 정산</h3>
					`);
					bEnableSettle	= false;
					$('#list_agents').empty();
					console.log(obj);

					PreCalculateSettle(obj.list, 7);
					PreCalculateSettle(obj.list, 6);
					PreCalculateSettle(obj.list, 5);
					PreCalculateSettle(obj.list, 4);

					listAgents = [];

					for ( let i in obj.list )
					{
						listAgents.push({strNickname: obj.list[i].strNickname, strID: obj.list[i].strID});
						let tag = AddPartner(3, obj.list[i], false);
						$('#list_agents').append(tag);
					}
				}
			}
		});
	};

	/**
	 * 총본사 버튼 선택
	 * @param strNickname
	 * @param strGroupID
	 * @constructor
	 */
	let RequestViceHQList = (strNickname, strGroupID) => {
		let objectData = {strNickname:strNickname, strGroupID:strGroupID};
		$.ajax({
			type:'post',
			url: "/manage_calculation/request_listvicehq",
			context: document.body,
			data:objectData,

			success: (obj) => {

				if ( obj.result == 'OK' )
				{
					listViceHQ = obj.listData;
					SetViceHQList();
				}
				else
				{
					alert(`${strAlertError}\r\n${obj.data}`);
				}
			},
			error:function(request,status,error){
				alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
			}
		});
	}

	/**
	 * 총본사 목록에서 총본사를 선택
	 */
	let SelectViceHQ = (strNickname, strGroupID) => {
		strCurrentViceHQNickname = strNickname;
		RequestAdminList(strNickname, strGroupID);
	}

	/**
	 * 총본사 버튼 목록 표시
	 */
	let SetViceHQList = () => {
		$('#ViceHQList').empty();
		for ( let i in listViceHQ )
		{
			let isFinish = (parseInt(listViceHQ[i].iSettleCount) > 0) ? '(완)' : '';
			let btnColor = (parseInt(listViceHQ[i].iSettleCount) > 0) ? 'btn_orange' : 'btn_green';
			if (listViceHQ[i].strNickname == strCurrentViceHQNickname) {
				btnColor = 'btn_brightred';
			}
			let tag = `<a href="javascript:SelectViceHQ('${listViceHQ[i].strNickname}', '${listViceHQ[i].strGroupID}');" class="${btnColor}" id="button_vicehq">${listViceHQ[i].strNickname}${isFinish}</a>`;
			$('#ViceHQList').append(tag);
		}
	}

	/**
	 * 총본사 이하 본사 목록 조회
	 */
	let RequestAdminList = (strNickname, strGroupID) => {
		if ( dateQuaterStart == '' || dateQuaterEnd == '' )
		{
			alert('분기를 선택 하십시오.');
			return;
		}
		let objectData = {strNickname:strNickname, strGroupID:strGroupID, strQuater:strQuater};
		$.ajax({
			type:'post',
			url: "/manage_calculation/request_listadmin",
			context: document.body,
			data:objectData,

			success: (obj) => {

				if ( obj.result == 'OK' )
				{
					SetViceHQList();
					listAdmin = obj.listData;
					SetAdminList();
				}
				else
				{
					alert(`${strAlertError}\r\n${obj.data}`);
				}
			},
			error:function(request,status,error){
				alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
			}
		});
	}

	/**
	 * 본사 버튼 목록 표시
	 */
	let SetAdminList = () => {
		$('#AdminList').empty();
		for ( let i in listAdmin )
		{
			let isFinish = (parseInt(listAdmin[i].iSettleCount) > 0) ? '(완)' : '';
			let btnColor = (parseInt(listAdmin[i].iSettleCount) > 0) ? 'btn_orange' : 'btn_green';
			if (listAdmin[i].strNickname == strCurrentAdminNickname) {
				btnColor = 'btn_brightred';
			}
			let tag = `<a href="javascript:SelectAdmin('${listAdmin[i].strNickname}', '${listAdmin[i].strGroupID}');" class="${btnColor}" id="button_admin")">${listAdmin[i].strNickname}${isFinish}</a>`;
			$('#AdminList').append(tag);
		}
	}

	/**
	 * 본사 버튼 클릭
	 * 죽장 정산 내 대본사 목록 표시
	 */
	let SelectAdmin = (strNickname, strGroupID) => {
		if ( dateQuaterStart == '' || dateQuaterEnd == '' )
		{
			alert('분기를 선택 하십시오.');
			return;
		}
		// 선택한 본사 정보
		strCurrentAdminNickname = strNickname;
		strCurrentAdminGroupId = strGroupID;
		// 본사 선택시 부본사 클리어
		strCurrentProAdminNickname = '';
		// 본사 선택시 하위 정산데이터 클리어
		$(`#list_tit`).empty();
		$('#list_agents').empty();

		let objectData = {strNickname:strNickname, strGroupID:strGroupID, strQuater:strQuater};

		$.ajax({
			type:'post',
			url: "/manage_calculation/request_listpadmin",
			context: document.body,
			data:objectData,
			success: (obj) => {
				if ( obj.result == 'OK' )
				{
					SetViceHQList();
					SetAdminList();
					listProAdmin = obj.listData;
					SetProAdminList();
				}
				else
				{
					alert(`${strAlertError}\r\n${obj.data}`);
				}
			},
			error:function(request,status,error){
				alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
			}
		});
	}

	/**
	 * 대본사 버큰 클릭
	 * @param strNickname
	 * @constructor
	 */
	let SelectProAdmin = (strNickname) => {

		if ( dateQuaterStart == '' || dateQuaterEnd == '' )
		{
			alert('분기를 선택 하십시오.');
			return;
		}

		let currentProAdmin = FindProAdmin(strNickname);
		if ( currentProAdmin == null )
			return;
		strCurrentProAdminNickname = strNickname;
		RequestList(currentProAdmin.strGroupID, currentProAdmin.iClass, dateQuaterStart, dateQuaterEnd);
	}

	/**
	 * 대본사 버튼 목록
	 */
	let SetProAdminList = () => {
		$('#PAdminList').empty();
		for ( let i in listProAdmin )
		{
			let isFinish = (parseInt(listProAdmin[i].iSettleCount) > 0) ? '(완)' : '';
			let btnColor = (parseInt(listProAdmin[i].iSettleCount) > 0) ? 'btn_orange' : 'btn_green';
			if (listProAdmin[i].strNickname == strCurrentProAdminNickname) {
				btnColor = 'btn_brightred';
			}
			let tag = `<a href="javascript:SelectProAdmin('${listProAdmin[i].strNickname}');" class="${btnColor}" id="button_proadmin")">${listProAdmin[i].strNickname}${isFinish}</a>`;
			$('#PAdminList').append(tag);
		}
	}

	let RequestApplySettle = () => {

		if ( bEnableSettle == false )
		{
			alert('이미 정산 되었습니다.');
			return;
		}

		let ok = confirm('죽장 정산을 하시겠습니까?');
		if (ok != true) {
			return;
		}

		console.log('RequestApplySettle');

		let list = [];
		for ( let i in listAgents )
		{
			let iClass = $(`#class_${listAgents[i].strNickname}`).val();
			if (iClass > 5) // 정산 불필요(총판이하)
				continue;

			let iCommissionB = $(`#commissionb_${listAgents[i].strNickname}`).text();
			let iCommissionS = $(`#commissions_${listAgents[i].strNickname}`).text();
			let iSettle = $(`#quatersettle_${listAgents[i].strNickname}`).text();
			let iInputSettle = $(`#input_${listAgents[i].strNickname}`).val();
			let iQuaterSettle = iSettle;

			let iTotal = $(`#total_${listAgents[i].strNickname}`).text();
			let iBWinlose = $(`#bwinlose_${listAgents[i].strNickname}`).text();
			let iUWinlose = $(`#uwinlose_${listAgents[i].strNickname}`).text();
			let iSWinlose = $(`#swinlose_${listAgents[i].strNickname}`).text();
			let iPWinlose = $(`#pwinlose_${listAgents[i].strNickname}`).text();
			let iRolling = $(`#rolling_${listAgents[i].strNickname}`).text();
			let iResult = $(`#result_${listAgents[i].strNickname}`).text();

			// var fSettleBaccarat = parseFloat($(`#fSettleBaccarat${element.id}`).val());
			// var fSettleSlot = parseFloat($(`#fSettleSlot${element.id}`).val());
			// var fSettlePBA = parseFloat($(`#fSettlePBA${element.id}`).val());
			// var fSettlePBB = parseFloat($(`#fSettlePBB${element.id}`).val());

			let fSettleBarccarat = parseFloat($(`#fSettleBaccarat${listAgents[i].strNickname}`).val());
			let fSettleSlot = parseFloat($(`#fSettleSlot${listAgents[i].strNickname}`).val());
			let fSettlePBA = parseFloat($(`#fSettlePBA${listAgents[i].strNickname}`).val());
			let fSettlePBB = parseFloat($(`#fSettlePBB${listAgents[i].strNickname}`).val());

			iCommissionB = iCommissionB?.replace(/,/g, '') ?? '0';
			iCommissionS = iCommissionS?.replace(/,/g, '') ?? '0';
			iSettle = iSettle?.replace(/,/g, '') ?? '0';
			iInputSettle = iInputSettle?.replace(/,/g, '') ?? '0';
			iQuaterSettle = iQuaterSettle?.replace(/,/g, '') ?? '0';
			iTotal = iTotal?.replace(/,/g, '') ?? '0';
			iBWinlose = iBWinlose?.replace(/,/g, '') ?? '0';
			iUWinlose = iUWinlose?.replace(/,/g, '') ?? '0';
			iSWinlose = iSWinlose?.replace(/,/g, '') ?? '0';
			iPWinlose = iPWinlose?.replace(/,/g, '') ?? '0';
			iRolling = iRolling?.replace(/,/g, '') ?? '0';
			iResult = iResult?.replace(/,/g, '') ?? '0';

			// fSettleBarccarat = iQuaterSettle.replace(/,/g, '');
			// fSettleSlot = iQuaterSettle.replace(/,/g, '');
			// fSettlePBA = iQuaterSettle.replace(/,/g, '');
			// fSettlePBB = iQuaterSettle.replace(/,/g, '');
			iInputSettle = parseInt(iInputSettle);
			iQuaterSettle = parseInt(iQuaterSettle);
			if ( iClass == 5 && iQuaterSettle < 0 )
				iQuaterSettle = 0;

			if ( iQuaterSettle > 0 && iQuaterSettle < iInputSettle )
			{
				alert('지급 금액이 올바르지 않습니다.');
				return;
			}

			// 이월금액 계산
			let iAccumulated = 0;
			if ( iQuaterSettle < 0 )
			{
				// 대본만 계산
				if (iClass == 4) {
					iAccumulated = iQuaterSettle;
				}
				iInputSettle = 0;
			}
			else
			{
				iAccumulated = iQuaterSettle - iInputSettle;
			}

			list.push(listAgents[i].strNickname);
			list.push(iSettle);
			list.push(iInputSettle);
			list.push(iQuaterSettle);
			list.push(iAccumulated);
			list.push(iCommissionB);
			list.push(iCommissionS);
			list.push(iTotal);
			list.push(iBWinlose);
			list.push(iUWinlose);
			list.push(iSWinlose);
			list.push(iPWinlose);
			list.push(iRolling);
			list.push(iResult);

			list.push(fSettleBarccarat);
			list.push(fSettleSlot);
			list.push(fSettlePBA);
			list.push(fSettlePBB);

			list.push(iClass);
			list.push(listAgents[i].strID);
		}


		let data = list.join(',');
		console.log(data);

		$.ajax({
			url:'/manage_calculation/request_applysettle',
			type:"POST",
			data:{
				strNickname: strCurrentAdminNickname,
				data:data,
				strQuater:strQuater,
			},
			dataType: "json",
			success: function (obj) {
				console.log(obj);
				if ( obj.result == 'OK')
				{
					alert('정산이 완료 되었습니다.');
					RequestOverview(user.strGroupID, user.iClass, strQuater, dateQuaterStart, dateQuaterEnd, user.strID);

					let currentProAdmin = FindProAdmin(strCurrentProAdminNickname);
					// SelectAdmin(strCurrentAdminNickname, strCurrentAdminGroupId);
					RequestList(currentProAdmin.strGroupID, currentProAdmin.iClass, dateQuaterStart, dateQuaterEnd);
				}
				else
				{
					alert('이미 정산된 파트너 입니다.');
					RequestOverview(user.strGroupID, user.iClass, strQuater, dateQuaterStart, dateQuaterEnd, user.strID);
				}
			}
		});
	}

	let DoApplySettle = () => {
		let agents = document.querySelectorAll("tr[class=Agent]");

		let list = [];
		let fParentSettleBaccarat = 100;
		let fParentSettleSlot = 100;
		let fParentSettlePBA = 100;
		let fParentSettlePBB = 100;

		console.log(`Agent Length : ${agents.length}`);

		let fSettleBaccaratParent = 0.0;
		let fSettleSlotParent = 0.0;
		let fSettlePBAParent = 0.0;
		let fSettlePBBParent = 0.0;


		for ( let i = 0; i < agents.length; ++i)
		{
			const element = agents[i];

			let fSettleBaccarat = parseFloat($(`#fSettleBaccarat${element.id}`).val());
			let fSettleSlot = parseFloat($(`#fSettleSlot${element.id}`).val());
			let fSettlePBA = parseFloat($(`#fSettlePBA${element.id}`).val());
			let fSettlePBB = parseFloat($(`#fSettlePBB${element.id}`).val());
			let iClass = parseInt($(`#iClass${element.id}`).val());

			fSettleBaccaratParent = fSettleBaccarat;
			fSettleSlotParent = fSettleSlot;
			fSettlePBAParent = fSettlePBA;
			fSettlePBBParent = fSettlePBB;

			if ( element != null )
			{
				list.push(element.id);
				list.push(iClass);
				list.push(fSettleBaccarat);
				list.push(fSettleSlot);
				list.push(fSettlePBA);
				list.push(fSettlePBB);

				fParentSettleBaccarat = fSettleBaccarat;
				fParentSettleSlot = fSettleSlot;
				fParentSettlePBA = fSettlePBA;
				fParentSettlePBB = fSettlePBB;
			}
		}

		console.log(list);

		if ( list.length == 0 )
			return;

		$.ajax({
			type:'post',
			url: "/manage_partner/request_modify_settle_group",
			context: document.body,
			data:{data:JSON.stringify(list)},

			success: (obj) => {
				//alert(obj);
				if ( obj.result == 'OK' )
				{
					alert(strAlertComplete);
					let tempStrCurrentProAdminNickname = strCurrentProAdminNickname;
					if (tempStrCurrentProAdminNickname != '') {
						$(`#list_agents`).empty();
						SelectProAdmin(tempStrCurrentProAdminNickname);
					} else {
						location.reload();
					}
				}
				else
				{
					alert(`${strAlertError}\r\n${obj.data}`);
				}
			},
			error:function(request,status,error){
				alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
			}
		});
	}

	let lastMonth = (today, diff_month) => {
		today = today.slice(0,4) + '-' + today.slice(4,6) + '-' + today.slice(6,) // ex) 2019-12-10
		let d = new Date(today)
		d.setMonth(d.getMonth() - diff_month)
		return getDateStr(d)
	}

	let OnClickMemo = (strNickname) => {
		let strValue = $(`#memoinput_${strNickname}`).val();

		console.log(`OnClickMemo : ${strNickname}, Text : ${strValue}`);
		$.ajax({
			url:'/manage_calculation/request_savememo',
			type:"POST",
			data: {
				strNickname:strNickname,
				strValue:strValue,
			},
			dataType: "json",
			success: function (obj) {

				if ( obj.result == 'OK')
				{
					alert('저장 되었습니다.');
				}
				else
				{
				}
			}
		});
	}

	let OnClickShareMemo = () => {

		if (strQuater == '' || strQuater == undefined) {
			alert('분기를 선택해주세요');
			return;
		}

		let strMemo = $(`#share_memo1`).val();
		let strMemo2 = $(`#share_memo2`).val();

		console.log(`OnClickShareMemo : ${strMemo} / ${strMemo2}`);
		$.ajax({
			url:'/manage_calculation/request_share_savememo',
			type:"POST",
			data: {
				strMemo: strMemo,
				strMemo2: strMemo2,
				strQuater: strQuater,
				strID: user.strID,
			},
			dataType: "json",
			success: function (obj) {

				if ( obj.result == 'OK')
				{
					alert('저장 되었습니다.');
				}
				else
				{
					alert(obj.msg);
				}
			}
		});
	}

	let RequestPartnerInfo = (strNickname, strGroupID, iClass) => {
		var scLeft = window.screenLeft + 50;
		var scTop = window.screenTop + 50;
		window.open('', 'popupChk', `width=1280, height=720, top=${scTop}, left=${scLeft}, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no`);

		var $form = $('<form></form>');
		$form.attr('action', '/manage_partner_popup/games');
		$form.attr('method', 'post');
		$form.attr('target', 'popupChk');
		$form.appendTo('body');

		var idx = $(`<input type="hidden" value="${strNickname}" name="strNickname">`);
		var page = $(`<input type="hidden" value="${strGroupID}" name="strGroupID">`);
		var category = $(`<input type="hidden" value=${parseInt(iClass)} name="iClass">`);

		$form.append(idx).append(page).append(category);
		$form.submit();
	}

	let RequestPartnerCredits = (strNickname, strGroupID, iClass) => {
		window.open('', 'popupChk', 'width=1280, height=720, top=100, left=100, fullscreen=no, menubar=no, status=no, toolbar=no, titlebar=yes, location=no, scrollbar=no');

		var $form = $('<form></form>');
		$form.attr('action', '/manage_partner_popup/credits');
		$form.attr('method', 'post');
		$form.attr('target', 'popupChk');
		$form.appendTo('body');

		let id = $(`<input type="hidden" value="${strID}" name="strID">`);
		var idx = $(`<input type="hidden" value="${strNickname}" name="strNickname">`);
		var page = $(`<input type="hidden" value="${strGroupID}" name="strGroupID">`);
		var category = $(`<input type="hidden" value=${parseInt(iClass)} name="iClass">`);

		$form.append(idx).append(page).append(category).append(id);
		$form.submit();
	}

	let SetTestTag = (enable) => {
		$(`#testSettle`).empty();
		if (enable) {
			let month = 11;
			$(`#testSettle`).append(
					`
						<input type="checkbox" style="width:20px;height:20px;" name="checkTestSettle" id="checkTestSettle" required="no" message="">
						일자별 죽장테스트 :
						<select id="quater_test" style="width:100px;">
							<option value="2">3</option>
							<option value="3">4</option>
							<option value="4">5</option>
							<option value="5">6</option>
							<option value="6">7</option>
							<option value="7">8</option>
							<option value="8">9</option>
							<option value="9">10</option>
							<option value="10">11</option>
							<option value="11">12</option>
							<option value="12">13</option>
							<option value="13">14</option>
							<option value="14">15</option>
							<option value="15">16</option>
							<option value="16">17</option>
							<option value="17">18</option>
							<option value="18">19</option>
							<option value="19">20</option>
							<option value="20">21</option>
							<option value="21">22</option>
							<option value="22">23</option>
							<option value="23">24</option>
							<option value="24">25</option>
							<option value="25">26</option>
							<option value="26">27</option>
							<option value="27">28</option>
							<option value="28">29</option>
							<option value="29">30</option>
							<option value="30" selected>31</option>
						</select>일
						<button class="btn_blue" style="border:1px solid rgb(95, 93, 93);width:70px;height:25px;text-align:center;background-color: rgb(74, 141, 68);color:white" onclick="OnClickTestSettle();">조회</button>
						<button id="button_quater" class="btn_blue" data-menu="2" style="border:1px solid rgb(95, 93, 93);width:100px;height:25px;text-align:center;background-color: rgb(74, 141, 68);color:white" onclick="RequestTestCurrentSettle();">죽장 초기화(T)</button>
						<button id="button_quater" class="btn_blue" data-menu="2" style="border:1px solid rgb(95, 93, 93);width:150px;height:25px;text-align:center;background-color: rgb(74, 141, 68);color:white" onclick="RequestTestInitSettle();">죽장 전체 초기화(T)</button>
				`
			);
		}
	}

	let RequestTestCurrentSettle = () => {
		if (strQuater == '') {
			alert('먼저 조회를 해주세요');
			return;
		}
		if (confirm('현재 조회된 죽장을 초기화합니다')) {
			$.ajax({
				type:'post',
				url: "/manage_calculation/testinitcurrent",
				data: {
					strQuater:strQuater,
				},
				dataType: "json",
				success: (obj) => {
					if ( obj.result == 'OK' )
					{
						alert('완료');
						location.reload();
					}
				},
				error:function(request,status,error){
					alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
				}
			});
		}
	}

	let RequestTestInitSettle = () => {
		if (confirm('전체 죽장 초기화합니다')) {
			$.ajax({
				type:'post',
				url: "/manage_calculation/testinit",
				context: document.body,

				success: (obj) => {
					//alert(obj);
					if ( obj.result == 'OK' )
					{
						alert('완료');
						location.reload();
					}
				},
				error:function(request,status,error){
					alert("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
				}



			});
		}
	}

	let OnClickTestSettle = () => {
		console.log(`죽장테스트 조회 클릭`);

		let isCheck = $(`#checkTestSettle`).attr('checked');
		if ( isCheck == undefined ) {
			alert('죽장테스트 앞 체크박스에 체크를 해주세요');
			return;
		}

		let month = parseInt($('#quater_month').val())+1;
		let day = parseInt($('#quater_test').val())+1;
		console.log(day);
		dateQuaterStart = `2023-${month}-${day}`;
		dateQuaterEnd = `2023-${month}-${day}`;
		strQuater = `${month}-${day}`;
		console.log(`strQuater : ${strQuater}`);
		console.log(`dateQuaterStart : ${dateQuaterStart}`);
		console.log(`dateQuaterEnd : ${dateQuaterEnd}`);

		strCurrentAdminNickname = '';
		// let currentProAdmin = FindProAdmin(strCurrentAdminNickname);
		// if ( currentProAdmin == null ) {
		// 	alert('파트너를 선택해주세요');
		// 	return;
		// }
		// RequestList(currentProAdmin.strGroupID, currentProAdmin.iClass, dateQuaterStart, dateQuaterEnd);

		// let iMonth = parseInt($('#quater_month').val());
		// dateQuaterStart = Get1QuaterStartDate(iMonth);
		// dateQuaterEnd = Get1QuaterEndDate(iMonth);
		// strQuater = `${parseInt(iMonth)+1}-1`;
		// selectQuater = 1;

		RequestOverview(user.strGroupID, user.iClass, strQuater, dateQuaterStart, dateQuaterEnd, user.strID);

		if ( strCurrentAdminNickname != null && strCurrentAdminNickname.length > 0 && strCurrentAdminGroupId != null && strCurrentAdminGroupId.length > 0 ) {
			// 해당 대본사에 대한 정산 완료 여부 체크
			SelectAdmin(strCurrentAdminNickname, strCurrentAdminGroupId);
		} else if (user.iClass == 2) {
			RequestAdminList(user.strNickname, user.strGroupID);
		} else if (user.iClass == 1) {
			RequestViceHQList(user.strNickname, user.strGroupID);
		}

		if (parseInt(user.iClass) <= 3)
		{
			$(`#list_tit`).empty();
			$('#list_agents').empty();
		}
	}


</script>
